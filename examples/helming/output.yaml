apiVersion: apps/v1
kind: Deployment
metadata:
  name: kerbi-kube-state-metrics
  namespace: default
  labels:
    app.kubernetes.io/name: kube-state-metrics
    helm.sh/chart: kube-state-metrics-2.7.2
    app.kubernetes.io/instance: kerbi
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-state-metrics
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kube-state-metrics
        app.kubernetes.io/instance: kerbi
    spec:
      hostNetwork: false
      serviceAccountName: kerbi-kube-state-metrics
      securityContext:
        fsGroup: 65534
        runAsUser: 65534
      containers:
      - name: kube-state-metrics
        args:
        - "--collectors=certificatesigningrequests"
        - "--collectors=configmaps"
        - "--collectors=cronjobs"
        - "--collectors=daemonsets"
        - "--collectors=deployments"
        - "--collectors=endpoints"
        - "--collectors=horizontalpodautoscalers"
        - "--collectors=ingresses"
        - "--collectors=jobs"
        - "--collectors=limitranges"
        - "--collectors=namespaces"
        - "--collectors=nodes"
        - "--collectors=persistentvolumeclaims"
        - "--collectors=persistentvolumes"
        - "--collectors=poddisruptionbudgets"
        - "--collectors=pods"
        - "--collectors=replicasets"
        - "--collectors=replicationcontrollers"
        - "--collectors=resourcequotas"
        - "--collectors=secrets"
        - "--collectors=services"
        - "--collectors=statefulsets"
        - "--collectors=storageclasses"
        imagePullPolicy: IfNotPresent
        image: quay.io/coreos/kube-state-metrics:v1.9.5
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: "/healthz"
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: "/"
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: example-postgresql
  labels:
    app: postgresql
    chart: postgresql-1.0.0
    release: example
    heritage: Helm
  annotations:
    helm.sh/resource-policy: nil
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: kerbi-mysql-test
  namespace: default
  labels:
    app: kerbi-mysql
    chart: mysql-1.6.3
    heritage: Helm
    release: kerbi
  annotations: {}
data:
  run.sh: ''
